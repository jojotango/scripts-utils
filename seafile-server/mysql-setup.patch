--- a/scripts/setup-seafile-mysql.py
+++ b/scripts/setup-seafile-mysql.py
@@ -173,2 +173,7 @@
-        return os.environ['PYTHON']
-
+        try:
+            python_executable = os.environ['PYTHON']
+        except KeyError:
+            return sys.executable
+        else:
+            return python_executable
+
@@ -304,14 +304,13 @@
-        self.bin_dir = os.path.join(self.install_path, 'seafile', 'bin')
+        self.bin_dir = '/usr/bin'
         self.central_config_dir = os.path.join(self.top_dir, 'conf')
         Utils.must_mkdir(self.central_config_dir)

     def check_pre_condiction(self):
         def error_if_not_exists(path):
             if not os.path.exists(path):
                 Utils.error('"%s" not found' % path)

         paths = [
-            os.path.join(self.install_path, 'seafile'),
             os.path.join(self.install_path, 'seahub'),
             os.path.join(self.install_path, 'runtime'),
         ]
--- a/tools/seafile-admin
+++ b/tools/seafile-admin
@@ -857,6 +861,10 @@
     files = [
         os.path.join(cwd, 'conf', 'ccnet.conf'),
         os.path.join(cwd, 'seafile-server', 'runtime', 'seahub.conf'),
-        os.path.join(cwd, 'seahub.db'),
+        # os.path.join(cwd, 'seahub.db'),  # This line is not util with mysql 
+                                           # and crash daemon starting
+                                           # I don't find a clean method for
+                                           # determinate if mysql is starting
+                                           # Your suggestions are welcome
         os.path.join(cwd, 'conf', 'seahub_settings.py'),
     ]
